{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"clientHookInServerComponentError\", {\n  enumerable: true,\n  get: function () {\n    return clientHookInServerComponentError;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _react = /*#__PURE__*/_interop_require_default._(require(\"react\"));\nfunction clientHookInServerComponentError(hookName) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // If useState is undefined we're in a server component\n    if (!_react.default.useState) {\n      throw new Error(\"\" + hookName + ' only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component');\n    }\n  }\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["clientHookInServerComponentError","hookName","process","env","NODE_ENV","_react","default","useState","Error"],"sources":["../../../src/client/components/client-hook-in-server-component-error.ts"],"sourcesContent":[null],"mappings":";;;;;+BAEgB;;;WAAAA,gCAAA;;;;+DAFE;AAEX,SAASA,iCACdC,QAAgB;EAEhB,IAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;IACzC;IACA,IAAI,CAACC,MAAA,CAAAC,OAAK,CAACC,QAAQ,EAAE;MACnB,MAAM,IAAIC,KAAA,CACR,EAAC,GAAEP,QAAA,GAAS;IAEhB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}