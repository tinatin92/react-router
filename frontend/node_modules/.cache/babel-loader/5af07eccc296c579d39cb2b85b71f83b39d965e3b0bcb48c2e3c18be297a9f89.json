{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tinaty\\\\OneDrive\\\\Desktop\\\\updated-react-course\\\\router-practise\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/event\");\n  if (!response.ok) {\n    /*  return {\r\n       isError: true,\r\n       message: 'Could not fetch data'\r\n     } */\n    throw new Error({\n      message: 'Could not fetch data'\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","style","textAlign","_c","loader","response","fetch","ok","Error","$RefreshReg$"],"sources":["C:/Users/Tinaty/OneDrive/Desktop/updated-react-course/router-practise/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n   if(data.isError){\r\n    return <p>{data.message}</p>\r\n   }\r\n  const events = data.events\r\n\r\n  return (\r\n    <>\r\n      <div style={{ textAlign: \"center\" }}></div>\r\n      {<EventsList events={events} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\nexport async function loader() {\r\n\r\n  const response = await fetch(\"http://localhost:8080/event\");\r\n\r\n  if (!response.ok) {\r\n   /*  return {\r\n      isError: true,\r\n      message: 'Could not fetch data'\r\n    } */\r\n    throw new Error({message: 'Could not fetch data'})\r\n  } else {\r\n    return response\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE3B,IAAGQ,IAAI,CAACC,OAAO,EAAC;IACf,oBAAON,OAAA;MAAAO,QAAA,EAAIF,IAAI,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC7B;EACD,MAAMC,MAAM,GAAGR,IAAI,CAACQ,MAAM;EAE1B,oBACEb,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAKc,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1CZ,OAAA,CAACF,UAAU;MAACe,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC/B,CAAC;AAEP;AAACR,EAAA,CAdQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAmB,EAAA,GADnBb,UAAU;AAgBnB,eAAeA,UAAU;AACzB,OAAO,eAAec,MAAMA,CAAA,EAAG;EAE7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EAE3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;AACH;AACA;AACA;IACI,MAAM,IAAIC,KAAK,CAAC;MAACb,OAAO,EAAE;IAAsB,CAAC,CAAC;EACpD,CAAC,MAAM;IACL,OAAOU,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}